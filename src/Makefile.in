#
#  Makefile for the Harvest Object Cache server
#
#  $Id$
#
#  Uncomment and customize the following to suit your needs:
#
LOG_OPT		= # -DNO_LOGGGING
HOST_OPT	= # -DCACHEMGR_HOSTNAME="getfullhostname()"
DEFINES		= $(LOG_OPT) $(HOST_OPT)

prefix		= @prefix@
exec_prefix	= @exec_prefix@
top_srcdir	= @top_srcdir@
bindir		= @bindir@
sysconfdir	= @sysconfdir@

CC		= @CC@
INSTALL		= @INSTALL@
INSTALL_BIN 	= @INSTALL_PROGRAM@
INSTALL_FILE 	= @INSTALL_DATA@
RANLIB		= @RANLIB@
YACC		= @YACC@
LEX		= @LEX@
LEXLIB		= @LEXLIB@
LN_S		= @LN_S@
PERL		= @CMD_PERL@
CRYPT_LIB	= @CRYPT_LIB@
STD_CFLAGS	= @STD_CFLAGS@
STD_LDFLAGS	= @STD_LDFLAGS@
XTRA_CFLAGS	= @XTRA_CFLAGS@
XTRA_LIBS	= @XTRA_LIBS@
XTRA_OBJS 	= @XTRA_OBJS@
SHELL		= /bin/sh


## AIX users might need to use these values
#
#CC		= cc
#XTRA_CFLAGS	= -D_HARVEST_HPUX_ -d_AIX -D_ALL_SOURCE
#

## LINUX users might need to use these values
#
#XTRA_CFLAGS	= -D_ALL_SOURCE

INCLUDE		= -I. -I../include	# MUST use -I. first
CFLAGS 		= $(STD_CFLAGS) $(XTRA_CFLAGS) $(INCLUDE) $(DEFINES)
LDFLAGS         = $(STD_LDFLAGS)
LIBS		= -L../lib -lregex -lutil $(XTRA_LIBS)
CLIENT_LIBS	= -L../lib -lutil $(XTRA_LIBS)

PROGS		= cached 
UTILS		= client dnsserver ftpget
CGIPROGS	= cachemgr.cgi
OBJS	 	= acl.o blocklist.o cache_cf.o cached_error.o comm.o \
		connect.o debug.o disk.o dynamic_array.o \
		fdstat.o filemap.o ftp.o gopher.o \
		hash.o http.o icp.o ipcache.o \
		main.o mime.o neighbors.o objcache.o \
		proto.o send-announce.o stack.o stat.o stmem.o \
		store.o storetoString.o tools.o ttl.o \
		url.o wais.o $(XTRA_OBJS)

DEFAULTS        = \
	-DDEFAULT_CONFIG_FILE=\"$(sysconfdir)/cached.conf\" \
	-DDEFAULT_FTPGET=\"$(bindir)/ftpget\" \
	-DDEFAULT_DNSSERVER=\"$(bindir)/dnsserver\" \
	-DDEFAULT_CACHE_LOG=\"$(prefix)/logs/cache.log\" \
	-DDEFAULT_ACCESS_LOG=\"$(prefix)/logs/access.log\" \
	-DDEFAULT_HIERARCHY_LOG=\"$(prefix)/logs/hierarchy.log\"

all:	$(PROGS) $(UTILS) $(CGIPROGS)

cached:	$(OBJS)
	$(CC) -o $@ $(LDFLAGS) $(OBJS) $(CRYPT_LIB) $(LIBS)

cache_cf.o: cache_cf.c
	$(CC) -c cache_cf.c $(CFLAGS) $(DEFAULTS)

client:	client.o
	$(CC) -o $@ $(LDFLAGS) $@.o $(CLIENT_LIBS)

dnsserver: dnsserver.o
	$(CC) -o $@ $(LDFLAGS) $@.o $(LIBS)

cachemgr.cgi:	cachemgr.o
	$(CC) -o $@ $(LDFLAGS) cachemgr.o $(CLIENT_LIBS)

ftpget: ftpget.o
	$(CC) -o $@ $(LDFLAGS) ftpget.o $(LIBS)

install-mkdirs:
	@if test ! -d $(prefix); then \
		echo "mkdir $(prefix)"; \
		mkdir $(prefix); \
	fi
	@if test ! -d $(exec_prefix); then \
		echo "mkdir $(exec_prefix)"; \
		mkdir $(exec_prefix); \
	fi
	@if test ! -d $(bindir); then \
		echo "mkdir $(bindir)"; \
		mkdir $(bindir); \
	fi
	@if test ! -d $(sysconfdir); then \
		echo "mkdir $(sysconfdir)"; \
		mkdir $(sysconfdir); \
	fi
	@if test ! -d $(exec_prefix)/logs; then \
		echo "mkdir $(exec_prefix)/logs"; \
		mkdir $(exec_prefix)/logs; \
	fi

install: all install-mkdirs
	@for f in $(PROGS); do \
		echo $(INSTALL_BIN) $$f $(bindir); \
		$(INSTALL_BIN) $$f $(bindir); \
	done
	@for f in $(UTILS); do \
		echo $(INSTALL_BIN) $$f $(bindir); \
		$(INSTALL_BIN) $$f $(bindir); \
	done
	@for f in $(CGIPROGS); do \
		echo $(INSTALL_BIN) $$f $(bindir); \
		$(INSTALL_BIN) $$f $(bindir); \
	done
	@if test -f $(sysconfdir)/cached.conf ; then \
		echo "$@ will not overwrite existing $(sysconfdir)/cached.conf" ; \
	else \
		echo "$(INSTALL_FILE) cached.conf $(sysconfdir)"; \
		$(INSTALL_FILE) cached.conf $(sysconfdir); \
	fi

clean: 
	-rm -rf *.o *pure_* core $(PROGS) $(UTILS) $(CGIPROGS)

realclean:	clean
	-rm -f Makefile

tar:
	-rm -f cache.tar
	tar cf cache.tar *.c *.h cached.conf Makefile*
