#
#  Makefile for the Squid Object Cache server
#
#  $Id$
#
#  Uncomment and customize the following to suit your needs:
#

prefix		= @prefix@
exec_prefix	= @exec_prefix@
top_srcdir	= @top_srcdir@
bindir		= @bindir@
libexecdir      = @libexecdir@
sysconfdir	= @sysconfdir@
localstatedir   = @localstatedir@
srcdir		= @srcdir@
VPATH		= @srcdir@

DEFAULT_CONFIG_FILE     = $(sysconfdir)/squid.conf
DEFAULT_MIME_TABLE	= $(sysconfdir)/mime.conf
DEFAULT_DNSSERVER       = $(libexecdir)/dnsserver
DEFAULT_CACHE_LOG       = $(localstatedir)/logs/cache.log
DEFAULT_ACCESS_LOG      = $(localstatedir)/logs/access.log
DEFAULT_STORE_LOG       = $(localstatedir)/logs/store.log
DEFAULT_PID_FILE        = $(localstatedir)/logs/squid.pid
DEFAULT_SWAP_DIR        = $(localstatedir)/cache
DEFAULT_PINGER		= $(libexecdir)/pinger
DEFAULT_UNLINKD		= $(libexecdir)/unlinkd
DEFAULT_ICON_DIR	= $(sysconfdir)/icons
DEFAULT_ERROR_DIR	= $(sysconfdir)/errors
DEFAULT_MIB_PATH	= $(sysconfdir)/mib.txt

CC		= @CC@
MAKEDEPEND	= @MAKEDEPEND@
INSTALL		= @INSTALL@
INSTALL_BIN 	= @INSTALL_PROGRAM@
INSTALL_FILE 	= @INSTALL_DATA@
INSTALL_SUID	= @INSTALL_PROGRAM@ -o root -m 4755
RANLIB		= @RANLIB@
LN_S		= @LN_S@
PERL            = @PERL@
CRYPTLIB	= @CRYPTLIB@
REGEXLIB	= @REGEXLIB@
PTHREADLIB	= @PTHREADLIB@
SNMPLIB		= @SNMPLIB@
MALLOCLIB	= @LIB_MALLOC@
AC_CFLAGS	= @CFLAGS@
LDFLAGS		= @LDFLAGS@
XTRA_LIBS	= @XTRA_LIBS@
XTRA_OBJS 	= @XTRA_OBJS@
MV		= @MV@
RM		= @RM@
SHELL		= /bin/sh


INCLUDE		= -I. -I../include -I$(top_srcdir)/include
CFLAGS 		= $(AC_CFLAGS) $(INCLUDE) $(DEFINES)
SQUID_LIBS	= -L../lib $(CRYPTLIB) $(REGEXLIB) @SQUID_PTHREAD_LIB@ \
		  $(SNMPLIB) $(MALLOCLIB) -lmiscutil $(XTRA_LIBS)
CLIENT_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)
DNSSERVER_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)
PINGER_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)

PROGS           = squid client
UTILS           = dnsserver unlinkd
SUID_UTILS	= pinger
CGIPROGS	= cachemgr.cgi
OBJS	 	= \
		access_log.o \
		acl.o \
		asn.o \
		@ASYNC_OBJS@ \
		cache_cf.o \
		cbdata.o \
		client_db.o \
		client_side.o \
		comm.o \
		debug.o \
		disk.o \
		dns.o \
		errorpage.o \
		event.o \
		fd.o \
		fdstat.o \
		filemap.o \
		fqdncache.o \
		ftp.o \
		globals.o \
		gopher.o \
		hash.o \
		http.o \
		http-anon.o \
		icmp.o \
		icp_v2.o \
		icp_v3.o \
		ident.o \
		ipc.o \
		ipcache.o \
		main.o \
		mem.o \
		mime.o \
		multicast.o \
		neighbors.o \
		net_db.o \
		objcache.o \
		pass.o \
		pconn.o \
		peer_select.o \
		proto.o \
		redirect.o \
		refresh.o \
		send-announce.o \
		@SNMP_OBJS@ \
		ssl.o \
		stat.o \
		stmem.o \
		store.o \
		store_clean.o \
		store_client.o \
		store_dir.o \
		store_key_md5.o \
		store_log.o \
		store_rebuild.o \
		store_swapin.o \
		store_swapmeta.o \
		store_swapout.o \
		string_arrays.o \
		tools.o \
		unlinkd.o \
		url.o \
		urn.o \
		useragent.o \
		wais.o \
		$(XTRA_OBJS)

SNMP_OBJS	= \
		snmp.o \
                snmp_vars.o \
                snmp_agent.o \
                snmp_config.o 

ASYNC_OBJS	= \
		aiops.o \
		async_io.o

DEFAULTS        = \
	-DDEFAULT_CONFIG_FILE=\"$(DEFAULT_CONFIG_FILE)\"

all:    squid.conf $(PROGS) $(UTILS) $(SUID_UTILS) $(CGIPROGS)

$(OBJS): $(top_srcdir)/include/version.h

squid:	$(OBJS)
	$(CC) -o $@ $(LDFLAGS) $(OBJS) $(SQUID_LIBS)

globals.o: globals.c Makefile
	$(CC) -c $< $(CFLAGS) -I$(srcdir) $(DEFAULTS)

globals.c: globals.h mk-globals-c.pl
	$(PERL) $(srcdir)/mk-globals-c.pl < $(srcdir)/globals.h > $@

string_arrays.c: enums.h mk-string-arrays.pl
	$(PERL) $(srcdir)/mk-string-arrays.pl < $(srcdir)/enums.h > $@

client:	client.o
	$(CC) -o $@ $(LDFLAGS) $@.o $(CLIENT_LIBS)

dnsserver: dnsserver.o
	$(CC) -o $@ $(LDFLAGS) $@.o $(DNSSERVER_LIBS)

cachemgr.cgi:	cachemgr.o
	$(CC) -o $@ $(LDFLAGS) cachemgr.o $(CLIENT_LIBS)

pinger: pinger.o
	$(CC) -o $@ $(LDFLAGS) pinger.o debug.o globals.o $(PINGER_LIBS)

unlinkd: unlinkd.c
	$(CC) $(CFLAGS) -DUNLINK_DAEMON $(srcdir)/unlinkd.c -o $@ $(LDFLAGS)

cache_cf.o: cf_parser.c

squid.conf cf_parser.c: cf.data cf_gen
	./cf_gen cf.data

cf_gen: cf_gen.o
	$(CC) -o $@ cf_gen.o

cf.data: cf.data.pre Makefile
	sed "\
	s%@DEFAULT_MIME_TABLE@%$(DEFAULT_MIME_TABLE)%g;\
	s%@DEFAULT_DNSSERVER@%$(DEFAULT_DNSSERVER)%g;\
	s%@DEFAULT_UNLINKD@%$(DEFAULT_UNLINKD)%g;\
	s%@DEFAULT_PINGER@%$(DEFAULT_PINGER)%g;\
	s%@DEFAULT_CACHE_LOG@%$(DEFAULT_CACHE_LOG)%g;\
	s%@DEFAULT_ACCESS_LOG@%$(DEFAULT_ACCESS_LOG)%g;\
	s%@DEFAULT_STORE_LOG@%$(DEFAULT_STORE_LOG)%g;\
	s%@DEFAULT_PID_FILE@%$(DEFAULT_PID_FILE)%g;\
	s%@DEFAULT_SWAP_DIR@%$(DEFAULT_SWAP_DIR)%g;\
	s%@DEFAULT_ICON_DIR@%$(DEFAULT_ICON_DIR)%g;\
        s%@DEFAULT_MIB_PATH@%$(DEFAULT_MIB_PATH)%g;\
	s%@DEFAULT_ERROR_DIR@%$(DEFAULT_ERROR_DIR)%g" < $(srcdir)/cf.data.pre >$@

install-mkdirs:
	-@if test ! -d $(prefix); then \
		echo "mkdir $(prefix)"; \
		mkdir $(prefix); \
	fi
	-@if test ! -d $(exec_prefix); then \
		echo "mkdir $(exec_prefix)"; \
		mkdir $(exec_prefix); \
	fi
	-@if test ! -d $(bindir); then \
		echo "mkdir $(bindir)"; \
		mkdir $(bindir); \
	fi
	-@if test ! -d $(libexecdir); then \
		echo "mkdir $(libexecdir)"; \
		mkdir $(libexecdir); \
	fi
	-@if test ! -d $(sysconfdir); then \
		echo "mkdir $(sysconfdir)"; \
		mkdir $(sysconfdir); \
	fi
	-@if test ! -d $(localstatedir); then \
		echo "mkdir $(localstatedir)"; \
		mkdir $(localstatedir); \
	fi
	-@if test ! -d $(localstatedir)/logs; then \
		echo "mkdir $(localstatedir)/logs"; \
		mkdir $(localstatedir)/logs; \
	fi

# Michael Lupp <mike@nemesis.saar.de> wants to know about additions
# to the install target.
install: all install-mkdirs
	@for f in $(PROGS); do \
		if test -f $(bindir)/$$f; then \
			echo $(MV) $(bindir)/$$f $(bindir)/-$$f; \
			$(MV) $(bindir)/$$f $(bindir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(bindir); \
		$(INSTALL_BIN) $$f $(bindir); \
		if test -f $(bindir)/-$$f; then \
			echo $(RM) -f $(bindir)/-$$f; \
			$(RM) -f $(bindir)/-$$f; \
		fi; \
	done
	@for f in $(UTILS); do \
		if test -f $(libexecdir)/$$f; then \
			echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
			$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(libexecdir); \
		$(INSTALL_BIN) $$f $(libexecdir); \
		if test -f $(libexecdir)/-$$f; then \
			echo $(RM) -f $(libexecdir)/-$$f; \
			$(RM) -f $(libexecdir)/-$$f; \
		fi; \
	done
	@for f in $(CGIPROGS); do \
		if test -f $(libexecdir)/$$f; then \
			echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
			$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(libexecdir); \
		$(INSTALL_BIN) $$f $(libexecdir); \
		if test -f $(libexecdir)/-$$f; then \
			echo $(RM) -f $(libexecdir)/-$$f; \
			$(RM) -f $(libexecdir)/-$$f; \
		fi; \
	done
	$(INSTALL_FILE) mib.txt $(DEFAULT_MIB_PATH)
	$(INSTALL_FILE) squid.conf $(sysconfdir)/squid.conf.default
	@if test -f $(sysconfdir)/squid.conf ; then \
		echo "$@ will not overwrite existing $(sysconfdir)/squid.conf" ; \
	else \
		echo "$(INSTALL_FILE) squid.conf $(sysconfdir)"; \
		$(INSTALL_FILE) squid.conf $(sysconfdir); \
	fi

	$(INSTALL_FILE) mime.conf $(sysconfdir)/mime.conf.default
	@if test -f $(sysconfdir)/mime.conf ; then \
		echo "$@ will not overwrite existing $(sysconfdir)/mime.conf" ; \
	else \
		echo "$(INSTALL_FILE) mime.conf $(sysconfdir)"; \
		$(INSTALL_FILE) mime.conf $(sysconfdir); \
	fi

install-pinger:
	@f=pinger; \
	if test -f $(libexecdir)/$$f; then \
		echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
	fi; \
	echo $(INSTALL_SUID) $$f $(libexecdir); \
	$(INSTALL_SUID) $$f $(libexecdir) || exit 1; \
	if test -f $(libexecdir)/-$$f; then \
		echo $(RM) -f $(libexecdir)/-$$f; \
		$(RM) -f $(libexecdir)/-$$f; \
	fi

clean: 
	-rm -rf *.o *pure_* core $(PROGS) $(UTILS) $(CGIPROGS) $(SUID_UTILS)
	-rm -f cf_gen cf_parser.c cf.data globals.c string_arrays.c

distclean:	clean
	-rm -f Makefile squid.conf squid.conf.pre

tags:
	ctags *.[ch] ../include/*.h ../lib/*.[ch]

depend:
	$(MAKEDEPEND) -I../include -I. -fMakefile *.c
