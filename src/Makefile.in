#
#  Makefile for the Squid Object Cache server
#
#  $Id$
#
#  Uncomment and customize the following to suit your needs:
#
HOST_OPT	= # -DCACHEMGR_HOSTNAME="getfullhostname()"
DEFINES         = $(HOST_OPT)

prefix		= @prefix@
exec_prefix	= @exec_prefix@
top_srcdir	= @top_srcdir@
bindir		= @bindir@
libexecdir      = @libexecdir@
sysconfdir	= @sysconfdir@
localstatedir   = @localstatedir@
srcdir		= @srcdir@
VPATH		= @srcdir@

DEFAULT_CONFIG_FILE     = $(sysconfdir)/squid.conf
DEFAULT_FTPGET          = $(libexecdir)/ftpget
DEFAULT_DNSSERVER       = $(libexecdir)/dnsserver
DEFAULT_CACHE_LOG       = $(localstatedir)/logs/cache.log
DEFAULT_ACCESS_LOG      = $(localstatedir)/logs/access.log
DEFAULT_HIERARCHY_LOG   = $(localstatedir)/logs/hierarchy.log
DEFAULT_STORE_LOG       = $(localstatedir)/logs/store.log
DEFAULT_SWAP_DIR        = $(localstatedir)/cache

CC		= @CC@
INSTALL		= @INSTALL@
INSTALL_BIN 	= @INSTALL_PROGRAM@
INSTALL_FILE 	= @INSTALL_DATA@
RANLIB		= @RANLIB@
LN_S		= @LN_S@
PERL            = @PERL@
CRYPT_LIB	= @CRYPT_LIB@
AC_CFLAGS	= @CFLAGS@
LDFLAGS		= @LDFLAGS@
XTRA_LIBS	= @XTRA_LIBS@
XTRA_OBJS 	= @XTRA_OBJS@
MV		= @MV@
RM		= @RM@
SHELL		= /bin/sh


INCLUDE		= -I. -I../include -I$(srcdir)/../include
CFLAGS 		= $(AC_CFLAGS) $(INCLUDE) $(DEFINES)
LIBS		= -L../lib -lregex -lmiscutil $(XTRA_LIBS)
CLIENT_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)

PROGS           = squid client
UTILS           = dnsserver ftpget
CGIPROGS	= cachemgr.cgi
OBJS	 	= acl.o background.o cache_cf.o errorpage.o comm.o \
		debug.o disk.o dynamic_array.o \
		fdstat.o filemap.o ftp.o gopher.o \
		hash.o http.o icp.o ipcache.o \
		main.o mime.o neighbors.o objcache.o \
		proto.o send-announce.o ssl.o stack.o stat.o stmem.o \
		store.o storetoString.o tools.o ttl.o \
		url.o wais.o $(XTRA_OBJS)

DEFAULTS        = \
	-DDEFAULT_CONFIG_FILE=\"$(DEFAULT_CONFIG_FILE)\" \
	-DDEFAULT_FTPGET=\"$(DEFAULT_FTPGET)\" \
	-DDEFAULT_DNSSERVER=\"$(DEFAULT_DNSSERVER)\" \
	-DDEFAULT_CACHE_LOG=\"$(DEFAULT_CACHE_LOG)\" \
	-DDEFAULT_ACCESS_LOG=\"$(DEFAULT_ACCESS_LOG)\" \
	-DDEFAULT_HIERARCHY_LOG=\"$(DEFAULT_HIERARCHY_LOG)\" \
	-DDEFAULT_STORE_LOG=\"$(DEFAULT_STORE_LOG)\" \
	-DDEFAULT_SWAP_DIR=\"$(DEFAULT_SWAP_DIR)\"

all:    squid.conf $(PROGS) $(UTILS) $(CGIPROGS)

squid:	$(OBJS)
	$(CC) -o $@ $(LDFLAGS) $(OBJS) $(CRYPT_LIB) $(LIBS)

cache_cf.o: cache_cf.c
	$(CC) -c $< $(CFLAGS) $(DEFAULTS)

client:	client.o
	$(CC) -o $@ $(LDFLAGS) $@.o $(CLIENT_LIBS)

dnsserver: dnsserver.o
	$(CC) -o $@ $(LDFLAGS) $@.o $(LIBS)

cachemgr.cgi:	cachemgr.o
	$(CC) -o $@ $(LDFLAGS) cachemgr.o $(CLIENT_LIBS)

ftpget: ftpget.o
	$(CC) -o $@ $(LDFLAGS) ftpget.o $(LIBS)

squid.conf: squid.conf.pre
	sed "\
	s%@DEFAULT_CONFIG_FILE@%$(DEFAULT_CONFIG_FILE)%g;\
	s%@DEFAULT_FTPGET@%$(DEFAULT_FTPGET)%g;\
	s%@DEFAULT_DNSSERVER@%$(DEFAULT_DNSSERVER)%g;\
	s%@DEFAULT_CACHE_LOG@%$(DEFAULT_CACHE_LOG)%g;\
	s%@DEFAULT_ACCESS_LOG@%$(DEFAULT_ACCESS_LOG)%g;\
	s%@DEFAULT_HIERARCHY_LOG@%$(DEFAULT_HIERARCHY_LOG)%g;\
	s%@DEFAULT_STORE_LOG@%$(DEFAULT_STORE_LOG)%g;\
	s%@DEFAULT_SWAP_DIR@%$(DEFAULT_SWAP_DIR)%g" <$? >$@

install-mkdirs:
	-@if test ! -d $(prefix); then \
		echo "mkdir $(prefix)"; \
		mkdir $(prefix); \
	fi
	-@if test ! -d $(exec_prefix); then \
		echo "mkdir $(exec_prefix)"; \
		mkdir $(exec_prefix); \
	fi
	-@if test ! -d $(bindir); then \
		echo "mkdir $(bindir)"; \
		mkdir $(bindir); \
	fi
	-@if test ! -d $(libexecdir); then \
		echo "mkdir $(libexecdir)"; \
		mkdir $(libexecdir); \
	fi
	-@if test ! -d $(sysconfdir); then \
		echo "mkdir $(sysconfdir)"; \
		mkdir $(sysconfdir); \
	fi
	-@if test ! -d $(localstatedir); then \
		echo "mkdir $(localstatedir)"; \
		mkdir $(localstatedir); \
	fi
	-@if test ! -d $(localstatedir)/logs; then \
		echo "mkdir $(localstatedir)/logs"; \
		mkdir $(localstatedir)/logs; \
	fi

install: all install-mkdirs
	@for f in $(PROGS); do \
		if test -f $(bindir)/$$f; then \
			echo $(MV) $(bindir)/$$f $(bindir)/-$$f; \
			$(MV) $(bindir)/$$f $(bindir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(bindir); \
		$(INSTALL_BIN) $$f $(bindir); \
		if test -f $(bindir)/-$$f; then \
			echo $(RM) -f $(bindir)/-$$f; \
			$(RM) $(bindir)/-$$f; \
		fi; \
	done
	@for f in $(UTILS); do \
		if test -f $(libexecdir)/$$f; then \
			echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
			$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(libexecdir); \
		$(INSTALL_BIN) $$f $(libexecdir); \
		if test -f $(libexecdir)/-$$f; then \
			echo $(RM) -f $(libexecdir)/-$$f; \
			$(RM) $(libexecdir)/-$$f; \
		fi; \
	done
	@for f in $(CGIPROGS); do \
		if test -f $(libexecdir)/$$f; then \
			echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
			$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(libexecdir); \
		$(INSTALL_BIN) $$f $(libexecdir); \
		if test -f $(libexecdir)/-$$f; then \
			echo $(RM) -f $(libexecdir)/-$$f; \
			$(RM) $(libexecdir)/-$$f; \
		fi; \
	done
	$(INSTALL_FILE) squid.conf $(sysconfdir)/squid.conf.default
	@if test -f $(sysconfdir)/squid.conf ; then \
		echo "$@ will not overwrite existing $(sysconfdir)/squid.conf" ; \
	else \
		echo "$(INSTALL_FILE) squid.conf $(sysconfdir)"; \
		$(INSTALL_FILE) squid.conf $(sysconfdir); \
	fi

clean: 
	-rm -rf *.o *pure_* core $(PROGS) $(UTILS) $(CGIPROGS)

realclean:	clean
	-rm -f Makefile squid.conf squid.conf.pre

tags:
	ctags *.[ch] ../include/*.h ../lib/*.[ch]

