* the code is a bit tangly. Specifically, I'm updating the bgp FSM
  in various places where it should just be driven in bgp_core.c !
  Untangle this mess.

* break out the bgp_read() code and the message dispatch stuff.
  The caller (bgpconn) should be able to just do bgp_read() to put some
  data in the buffer, then bgp_get_message() over and over again.
  It can then drive the FSM how it wants; the RIB addition/deletion
  can happen in the bgpconn code, leaving bgp_core for FSM, and bgp_packet
  for building/parsing BGP stuff.

* This implementation stores only the last ASN for now, rather than the whole
  path. Yes, the whole path would be much nicer, esp. to be able to build
  rules which say "if X is from a source which transits AS y", but its not
  needed for now. One would also have to implement AS path hashing/referencing
  to keep that somewhat efficient.

* Add a config flag which overrides the del bit - for RIB calc, immediate del is
  fine. For logging, ACLs, etc, immediate del may not be. Instead, tag the prefix
  as "deleted" so subsequent lookups can determine whether to use the stale
  result or not.
