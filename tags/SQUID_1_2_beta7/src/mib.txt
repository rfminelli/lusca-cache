-- File: SQUID.MIB
-- kostas@nlanr.net
-- Created    : 11/ 2/97 kostas@nlanr.net
-- Last Update: 11/18/97 kostas@nlanr.net


mgmt           	OBJECT IDENTIFIER ::= { iso org(3) dod(6) internet(1) 2 }
mib            	OBJECT IDENTIFIER ::= { mgmt 1 }
directory      	OBJECT IDENTIFIER ::= { internet 1 }
experimental   	OBJECT IDENTIFIER ::= { internet 3 }
private        	OBJECT IDENTIFIER ::= { internet 4 }
enterprises    	OBJECT IDENTIFIER ::= { private 1 }
nsfnet		OBJECT IDENTIFIER ::= { experimental 25 } 


--	SQUID-MIB DEFINITIONS ::= BEGIN
--		IMPORTS
--              TimeTicks,
--              Counter                FROM RFC1155-SMI
--             	DisplayString          FROM RFC1158-MIB
--            	mib-2                  FROM RFC1213-MIB
--           	OBJECT-TYPE            FROM RFC-1212
--          	TRAP-TYPE              FROM RFC-1215;
	squid 	OBJECT IDENTIFIER ::= { nsfnet 17 }

	cacheSystem	OBJECT IDENTIFIER ::= { squid 1 }
	cacheConfig  	OBJECT IDENTIFIER ::= { squid 2 }
	cachePerf	OBJECT IDENTIFIER ::= { squid 3 }
	cacheAccounting	OBJECT IDENTIFIER ::= { squid 4 }
	cacheSecurity	OBJECT IDENTIFIER ::= { squid 5 }
	cacheNetwork	OBJECT IDENTIFIER ::= { squid 6 } 

--
-- cacheSystem group
--
-- Should contain information not otherwise accessible through
-- standard MIB's. Where this is not true, we will align as soon
-- with the other MIBs carefully!
-- One reason to keep this information here is for dedicated 
-- hardware as offered by today's commercial caching solutions

	cacheSysVMsize OBJECT-TYPE
	       SYNTAX      INTEGER (0..2147483647)
		ACCESS read-only
		STATUS mandatory
		DESCRIPTION
			" Virtual Memory size in KB"
		::= { cacheSystem 1 }

	cacheSysStorage OBJECT-TYPE
		SYNTAX INTEGER (0..2147483647)
		ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Diskspace in MB"
                ::= { cacheSystem 2 }


--
-- config group
--
-- Contains configuration information including peers, acls etc.


	cacheAdmin OBJECT-TYPE
		SYNTAX OCTET STRING
		ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache Administrator Contact address "
                ::= { cacheConfig 1 }

	cacheUptime  OBJECT-TYPE
                SYNTAX Counter32
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Number of minutes since cache started "
		::= { cacheConfig 2 }

	cacheStorageConfig OBJECT IDENTIFIER ::= { cacheConfig 3  }

	cacheMemMaxSize OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache Memory Maximum Size "
                ::= { cacheStorageConfig 1 }

	cacheMemHighWM OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache Memory High Water Mark "
                ::= { cacheStorageConfig 2 }

        cacheMemLowWM OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache Memory High Water Mark "
                ::= { cacheStorageConfig 3 }

        cacheSwapMaxSize OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache Swap Maximum Size "
                ::= { cacheStorageConfig 4 }

        cacheSwapHighWM OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache Swap High Water Mark "
                ::= { cacheStorageConfig 5 }

        cacheSwapLowWM OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache Swap High Water Mark "
                ::= { cacheStorageConfig 6 }

	cacheWaisRelayHost OBJECT-TYPE
                SYNTAX OCTET STRING
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache WAIS relay host address "
                ::= { cacheConfig 4 }

        cacheWaisRelayPort OBJECT-TYPE
                SYNTAX Integer
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Cache WAIS relay host Port "
                ::= { cacheConfig 5 }

	cacheTimeoutValues OBJECT IDENTIFIER ::= { cacheConfig 6 }


	cacheReadTimeout  OBJECT-TYPE
                SYNTAX Integer
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Read Timeout Value " 
                ::= { cacheTimeoutValues 1 }

        cacheConnectionTimeout  OBJECT-TYPE
                SYNTAX Integer
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Connection Timeout Value " 
                ::= { cacheTimeoutValues 2 }

	cacheRequestTimeout  OBJECT-TYPE
                SYNTAX Integer
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Request Timeout Value " 
                ::= { cacheTimeoutValues 3 }



	cacheLoggingLevel OBJECT-TYPE
		SYNTAX Integer 
		ACCESS read-write
		STATUS mandatory
		DESCRIPTION
			" Logging level " 
		::= { cacheConfig 7 } 

	--
	-- config group : table of peers 
	--

	cachePeerTable OBJECT-TYPE
		SYNTAX SEQUENCE OF cachePeerEntry
		ACCESS read-only
		STATUS current
		DESCRIPTION
			" This table contains an enumeration of
			  the peer caches, complete with info "
                ::= { cacheConfig 8 }

	cachePeerEntry OBJECT-TYPE
		SYNTAX CachePeerEntry
		MAX-ACCESS not-accessible
		STATUS current
		DESCRIPTION 
			" An entry in cachePeerTable " 
		INDEX 	{ cachePeerId }
		::= { cachePeerTable 1 }

	CachePeerEntry ::= SEQUENCE {
	  cachePeerId		Integer,
	  cachePeerName		DisplayString,
	  cachePeerIP  		IpAddress,
	  cachePeerPortHttp 	INTEGER (1..65535),
	  cachePeerPortIcp	INTEGER (1..65535),
	  cachePeerType 	INTEGER,
	  cachePeerState	INTEGER
	}

	cachePeerName OBJECT-TYPE
		SYNTAX DisplayString
		ACCESS read-only
		STATUS current
	::= { cachePeerEntry 1 } 

	cachePeerIP OBJECT-TYPE
                SYNTAX IpAddress
                ACCESS read-only
                STATUS current
        ::= { cachePeerEntry 2 }

	cachePeerPortHttp OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cachePeerEntry 3 }

	cachePeerPortIcp OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cachePeerEntry 4 }

	cachePeerType OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cachePeerEntry 5 }

	cachePeerState OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cachePeerEntry 6 }

	cachePeerType OBJECT-TYPE
                SYNTAX INTEGER { 
                                parent(1), sibling(2), multicast(3), none(4)
                                }
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION 
                        " Peer Type "
	::= { cachePeerEntry 4 } 

--
-- cacheNetwork group
--
-- contains ip/fqdn cache info, network statistics and probe results
--
-- 

	-- NetDB info

	NetDbTable OBJECT-TYPE
                SYNTAX SEQUENCE OF netDbEntry
                ACCESS read-only
                STATUS current
                DESCRIPTION
                        " This table contains squid's netdb"
                ::= { cacheNetwork 1 } 

	netDbEntry OBJECT-TYPE
                SYNTAX NetDbEntry
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION
                        " An entry in the NetDb" 
                INDEX   { netDbEntryNetwork }
                ::= { NetDbTable 1 } 

	NetDbEntry ::= SEQUENCE {
		NetDbEntryNetwork	IpAddress,
		NetDbEntryPingsSent	Counter32,
		NetDbEntryPingsRecv	Counter32, 
		NetDbEntryHops		Integer,
		NetDbEntryRtt		TimeTicks,
		NetDbEntryPingTime	TimeTicks,
		NetDbEntryLastUse	TimeTicks,
	}
	
	NetDbEntryNetwork OBJECT-TYPE
                SYNTAX IpAddress
                ACCESS read-only
                STATUS current
	::= { netDbEntry 1 }

	NetDbEntryPingsSent OBJECT-TYPE
                SYNTAX Counter32
                ACCESS read-only
                STATUS current
        ::= { netDbEntry 2 }    

	NetDbEntryPingsRecv OBJECT-TYPE 
                SYNTAX Counter32        
                ACCESS read-only        
                STATUS current  
        ::= { netDbEntry 3 }            

	NetDbEntryHops OBJECT-TYPE
                SYNTAX Integer                
                ACCESS read-only                
                STATUS current          
        ::= { netDbEntry 4 }                    

        NetDbEntryRtt OBJECT-TYPE      
                SYNTAX TimeTicks
                ACCESS read-only
                STATUS current
        ::= { netDbEntry 5 }

	NetDbEntryPingTime OBJECT-TYPE
                SYNTAX TimeTicks
                ACCESS read-only
                STATUS current
        ::= { netDbEntry 6 }

	NetDbEntryLastUse OBJECT-TYPE
                SYNTAX TimeTicks
                ACCESS read-only
                STATUS current
        ::= { netDbEntry 7 }

	
	-- IP cache info

	IPcacheTable OBJECT-TYPE
                SYNTAX SEQUENCE OF iPcacheEntry
                ACCESS read-only
                STATUS current
                DESCRIPTION
                        " This table contains an enumeration of
                          the peer caches, complete with info "
                ::= { cacheNetwork 2 }

        iPcacheEntry OBJECT-TYPE
                SYNTAX IPcacheEntry
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION 
                        " An entry in cachePeerTable " 
                INDEX   { IPcacheEntryIP }
                ::= { IPcacheTable 1 }

        IPcacheEntry ::= SEQUENCE {
          IPcacheEntryName         OCTET STRING,
          IPcacheEntryIP           IpAddress,
          IPcacheEntryState        INTEGER, 
        }

	IPcacheEntryState OBJECT-TYPE
                SYNTAX INTEGER { 
                                pending(1), expired(2), ok(3) }
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION 
                        " State of IP cache entry " 
		::= { iPcacheEntry 3 } 

	IPcacheEntryName OBJECT-TYPE
                SYNTAX OCTET STRING
                ACCESS read-only
                STATUS current
	::= { iPcacheEntry 1 }

	IPcacheEntryIP OBJECT-TYPE
                SYNTAX IpAddress
                ACCESS read-only
                STATUS current
        ::= { iPcacheEntry 2 }

	IPcacheEntryState OBJECT-TYPE
                SYNTAX Integer
                ACCESS read-only
                STATUS current
        ::= { iPcacheEntry 3 }

	-- fqdn cache info

        FQDNcacheTable OBJECT-TYPE
                SYNTAX SEQUENCE OF fQDNcacheEntry
                ACCESS read-only
                STATUS current
                DESCRIPTION
                        " This table contains an enumeration of
                          the peer caches, complete with info "
                ::= { cacheNetwork 3 }

        fQDNcacheEntry OBJECT-TYPE
                SYNTAX FQDNcacheEntry
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION 
                        " An entry in cachePeerTable " 
                INDEX   { FQDNcacheEntryName }
                ::= { IPcacheTable 1 }

        FQDNcacheEntry ::= SEQUENCE {
          FQDNcacheEntryName         OCTET STRING,
          FQDNcacheEntryIP           IpAddress,
	  FQDNcacheEntryLastRef	     TimeTicks,
	  FQDNcacheEntryExpires	     TimeTicks,
          FQDNcacheEntryState        INTEGER
        }

	FQDNcacheEntryName OBJECT-TYPE
                SYNTAX OCTET STRING
                ACCESS read-only
                STATUS current
	::= { fQDNcacheEntry 1 }

	FQDNcacheEntryIP OBJECT-TYPE
                SYNTAX IpAddress
                ACCESS read-only
                STATUS current
        ::= { fQDNcacheEntry 2 }

	FQDNcacheEntryLastRef OBJECT-TYPE
                SYNTAX TimeTicks
                ACCESS read-only
                STATUS current
        ::= { fQDNcacheEntry 3}

	FQDNcacheEntryExpires OBJECT-TYPE
                SYNTAX TimeTicks
                ACCESS read-only
                STATUS current
        ::= { fQDNcacheEntry 4}

	FQDNcacheEntryState OBJECT-TYPE
                SYNTAX Integer
                ACCESS read-only
                STATUS current
        ::= { fQDNcacheEntry 5}



	FQDNcacheEntryState OBJECT-TYPE
                SYNTAX INTEGER { 
                                pending(1), expired(2), ok(3) }
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION 
                        "  state of  FQDN cache entry "
                ::= { fQDNcacheEntry 3  }


	cacheTCPconnections OBJECT-TYPE
                SYNTAX Counter32
                ACCESS read-only
                STATUS current
                DESCRIPTION
                        " Number of TCP connections since start-up "
		::= { cacheNetwork 4 }

	cacheUDPconnections OBJECT-TYPE
		SYNTAX Counter32
                ACCESS read-only
                STATUS current
                DESCRIPTION
                        " Number of UDCP connections since start-up "
                ::= { cacheNetwork 5 }

	cacheInThroughput OBJECT-TYPE
		SYNTAX Integer32
		ACCESS read-only
		STATUS current
		DESCRIPTION
			" Throughput of incoming traffic in 5 min intervals "
		::= { cacheNetwork 6 } 

--	cacheOutThroughput OBJECT-TYPE
----		SYNTAX Integer32
  --              ACCESS read-only
   --             STATUS current
    --            DESCRIPTION 
--			"Throughput of outgoing traffic in 5 min intevals"
--		::= { cacheNetwork 7 }

--
-- performance group { squid 3 }
--

	cacheSysPerf OBJECT IDENTIFIER ::= { cachePerf 1 } 
	cacheProtoStats OBJECT IDENTIFIER ::= { cachePerf 2 }
	cachePeerStats	OBJECT IDENTIFIER ::= { cachePerf 3 } 

	--
	-- cacheSysPerf 
	--

        cacheSysPageFaults OBJECT-TYPE
                SYNTAX Counter32
                ACCESS read-only
                STATUS mandatory
                DESCRIPTION
                        " Number of system page faults "
                ::= { cacheSysPerf 1 }

        cacheSysNumReads OBJECT-TYPE
                SYNTAX Counter32
                MAX-ACCESS not-accessible
                STATUS current 
                DESCRIPTION
                        " Number of Reads " 
        ::= { cacheSysPerf 2 }

        cacheSysDefReads OBJECT-TYPE
                SYNTAX Counter32
                MAX-ACCESS not-accessible
                STATUS current
		DESCRIPTION
			" see cachemgr "
        ::= { cacheSysPerf 3 }

        -- fd table

        cacheFdTable OBJECT-TYPE
                SYNTAX SEQUENCE OF cacheFdEntry
                ACCESS read-only
                STATUS current
                DESCRIPTION
                        " This table contains an enumeration of
                          the peer caches, complete with info "
                ::= { cacheSysPerf 4 }

        cacheFdEntry OBJECT-TYPE
                SYNTAX CacheFdEntry
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION 
                        " An entry in cachePeerTable " 
                INDEX   { cacheFdNumber }
                ::= { cacheFdTable 1 }

        CacheFdEntry ::= SEQUENCE {
                cacheFdNumber    INTEGER,
                cacheFdType      INTEGER,
		cacheFdTout	 INTEGER,
		cacheFdNread	 INTEGER,
		cacheFdNwrite	 INTEGER,
		cacheFdAddress	 IpAddress,
		cacheFdName	 DisplayString
        }

	cacheFdNumber OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
	::= { cacheFdEntry 1 }

	cacheFdType OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cacheFdEntry 2 }

	cacheFdTout OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cacheFdEntry 3 }

	cacheFdNread OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cacheFdEntry 4 }

	cacheFdNwrite OBJECT-TYPE
                SYNTAX INTEGER
                ACCESS read-only
                STATUS current
        ::= { cacheFdEntry 5 }

	cacheFdAddress OBJECT-TYPE
                SYNTAX IpAddress
                ACCESS read-only
                STATUS current
        ::= { cacheFdEntry 6 }

	cacheFdName OBJECT-TYPE
                SYNTAX DisplayString
                ACCESS read-only
                STATUS current
        ::= { cacheFdEntry 7 }


        cacheFdType OBJECT-TYPE
                SYNTAX INTEGER { icp(1), http(2), ftp(3),
                                          wais(4), gopher (5), Swap (6) }
                MAX-ACCESS  read-write
                STATUS      current
                DESCRIPTION
                        " type of file descriptor " 
                ::= { cacheFdEntry 2  }


	cacheMemUsage OBJECT-TYPE
		SYNTAX Integer32
		MAX-ACCESS read-only
		STATUS 	current
		DESCRIPTION
			" Amount of system memory allocated by the cache"
		::= { cacheSysPerf 5 } 

	cacheCpuUsage OBJECT-TYPE
		SYNTAX Integer32
		MAX-ACCESS read-only
                STATUS  current
                DESCRIPTION
                        " Amount of cpu seconds consumed"
		::= { cacheSysPerf 6 }

	cacheMaxResSize OBJECT-TYPE
                SYNTAX Integer32
                MAX-ACCESS read-only
                STATUS  current
                DESCRIPTION
                        " Maximum Resident Size"
                ::= { cacheSysPerf 7 }

	cacheNumObjCount OBJECT-TYPE
                SYNTAX Counter32                 MAX-ACCESS read-only
                STATUS  current
                DESCRIPTION
                        " Number of objects "
                ::= { cacheSysPerf 8 }


	--
	-- cacheProtoStats
	--


	cacheProtoStatTable OBJECT-TYPE
		SYNTAX SEQUENCE OF CacheProtoStatEntry
		ACCESS not-accessible
		STATUS current
		DESCRIPTION
			" Table containing aggregate statistics 
			  per supported protocol "
		::= { cacheProtoStats 1 }

	cacheProtoStatEntry   OBJECT-TYPE
                SYNTAX CacheProtoStatEntry
                ACCESS not-accessible
                STATUS current
                DESCRIPTION
                        " An entry in cacheProtoStatTable "
		INDEX { cacheProtoId }
		::= { cacheProtoStatTable 1 } 


        CacheProtoStatEntry ::= SEQUENCE {
		cacheProtoId 		Integer32,
                cacheProtoKbMax   	Counter32,
                cacheProtoKbMin   	Counter32,
                cacheProtoKbAvg   	Gauge,
                cacheProtoKbNow   	Counter32,
                cacheProtoHit     	Gauge,
                cacheProtoMiss    	Gauge,
                cacheProtoRefCount 	Counter32,
                cacheProtoTranferBytes 	Counter32,
        }
	cacheProtoId OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
		STATUS mandatory
                ::= { cacheProtoStatEntry 1 }

	cacheProtoKbMax OBJECT-TYPE
		SYNTAX Counter32 
		ACCESS read-only
                STATUS mandatory
		::= { cacheProtoStatEntry 2 }

	cacheProtoKbMin OBJECT-TYPE
                SYNTAX Counter32
                ACCESS read-only
                STATUS mandatory
                ::= { cacheProtoStatEntry 3 }

	cacheProtoKbAvg OBJECT-TYPE
                SYNTAX Gauge
                ACCESS read-only
                STATUS mandatory
                ::= { cacheProtoStatEntry 4 }

	cacheProtoKbNow OBJECT-TYPE
                SYNTAX Counter32
                ACCESS read-only
                STATUS mandatory
                ::= { cacheProtoStatEntry 5 }

	cacheProtoHit OBJECT-TYPE
                SYNTAX Gauge
                ACCESS read-only
                STATUS mandatory
                ::= { cacheProtoStatEntry 6 }

	cacheProtoMiss OBJECT-TYPE       
                SYNTAX Gauge
                ACCESS read-only        
                STATUS mandatory
                ::= { cacheProtoStatEntry 7 }   

	cacheProtoRefCount OBJECT-TYPE              
                SYNTAX Counter32                
                ACCESS read-only                
                STATUS mandatory
                ::= { cacheProtoStatEntry 8 }           

	cacheProtoTranferBytes OBJECT-TYPE                  
                SYNTAX Counter32                        
                ACCESS read-only                        
                STATUS mandatory
                ::= { cacheProtoStatEntry 9 }
	
	
	-- 
	-- cachePeerStats
	--

        cachePeerStatTable OBJECT-TYPE
                SYNTAX SEQUENCE OF cachePeerStatEntry
                ACCESS not-accessible
                STATUS current
                DESCRIPTION
                        " Table containing aggregate statistics 
                          per supported protocol "
                ::= { cacheProtoStats 2 }

        cachePeerStatEntry OBJECT-TYPE
                SYNTAX CachePeerStatEntry
                ACCESS not-accessible
                STATUS current
                DESCRIPTION
                        " An entry in cacheProtoStatTable "
                INDEX { cachePeerStatId }
                ::= { cachePeerStatTable 1 } 


        CachePeerStatEntry ::= SEQUENCE {
                cachePeerStatId     Integer,	
		peerPingsSent	Integer32,
		peerPingsAcked	Integer32,
		peerFetches	Integer32,
		peerRtt		Integer32,
		peerIgnored	Integer32,
		peerKeepAlSent	Integer32,
		peerKeepAlRecv	Integer32
        }

	cachePeerStatId OBJECT-TYPE
		SYNTAX Integer
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 1 }


	peerPingsSent OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 2 }

	peerPingsAcked OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 3 }

	peerFetches OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 4 }

	peerRtt OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 5 }

	peerIgnored OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 6 }

	peerKeepAlSent OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 7 }

	peerKeepAlRecv OBJECT-TYPE
                SYNTAX Integer32
                ACCESS read-only
                STATUS mandatory
                ::= { cachePeerStatEntry 8 }



---
---  cacheAccounting group 
---
---  We have to decide first if we follow to ietf rfcm/accounting wg
---  model of meters/managers. It could become quite costly to do this
---  type of accounting inside the caching software. If this agent is
---  cascaded by another agent doing this type of accounting, this would
---  be the place to add the information



---
--- cacheSecurity group
---

	cacheAccessControl OBJECT IDENTIFIER ::= { cacheSecurity 1 } 


        --- Access Control Lists for client access

        cacheProtoAclTable OBJECT-TYPE
                SYNTAX SEQUENCE OF cacheProtoAclEntry
                ACCESS read-only
                STATUS current
                DESCRIPTION
                        " This table contains the acl control configuration
                          for cache access "
                ::= { cacheAccessControl 1 }

        cacheProtoAclEntry OBJECT-TYPE
                SYNTAX CacheProtoAclEntry
                MAX-ACCESS not-accessible
                STATUS current
                DESCRIPTION 
                        " An entry in cacheProtoAclTable " 
                INDEX   { cacheProtoAclIndex }
                ::= { cacheProtoAclTable 1 }

        CacheProtoAclEntry ::= SEQUENCE {
	  cacheProtoAclIndex	Integer,
	  cacheProtoAclIP	IpAddress,
	  cacheProtoAclMask	IpAddress
          cacheProtoAclType     INTEGER
        }

