dnl
dnl  Configuration input file for Squid
dnl
dnl  Duane Wessels, wessels@nlanr.net, February 1996 (autoconf v2.7)
dnl
dnl  $Id$
dnl
dnl
dnl
AC_INIT(src/main.c)
AC_CONFIG_HEADER(include/autoconf.h)
AC_REVISION($Revision$)dnl
AC_PREFIX_DEFAULT(/usr/local/squid)
AC_CONFIG_AUX_DIR(aux)

AC_CANONICAL_HOST

dnl Build a copy of prefix

if test -n "$prefix"; then
  myprefix="$prefix";
else
  myprefix="$ac_default_prefix"
fi

INSTALL_TOPDIR="$myprefix";
INSTALL_LIBDIR="$myprefix/lib";
INSTALL_BINDIR="$myprefix/bin";
INSTALL_MANDIR="$myprefix/man";

eval "sysconfdirval=$sysconfdir"
eval "bindirval=$bindir"

THIS_HOST="`hostname`"
XTRA_CFLAGS=''
CRYPT_LIB=''

if test -z "$CACHE_HTTP_PORT"; then
	CACHE_HTTP_PORT="3128"
fi
if test -z "$CACHE_ICP_PORT"; then
	CACHE_ICP_PORT="3130"
fi
if test -z "$CACHE_FTP_PORT"; then
	CACHE_FTP_PORT="3132"
fi

dnl Subsitutions
AC_SUBST(INSTALL_TOPDIR)
AC_SUBST(INSTALL_LIBDIR)
AC_SUBST(INSTALL_BINDIR)
AC_SUBST(INSTALL_MANDIR)
AC_SUBST(DEFS)
AC_SUBST(XTRA_CFLAGS)
AC_SUBST(THIS_HOST)
AC_SUBST(CACHE_HTTP_PORT)
AC_SUBST(CACHE_ICP_PORT)
AC_SUBST(CACHE_FTP_PORT)
AC_SUBST(sysconfdirval)
AC_SUBST(bindirval)

dnl Check for GNU cc
AC_PROG_CC

dnl Warn if not using GNU cc
XXXCC=`echo $CC | awk '{print $1}'`
if test "`basename $XXXCC`" != "gcc"; then
        echo '**************************************************************';
        echo '**************************************************************';
        echo '**';
        echo '**   WARNING:  Squid is only guaranteed to compile with GNU cc.';
        echo "**   Currently, you're using $CC";
        echo '**   ';
        echo '**************************************************************';
        echo '**************************************************************';
	sleep 5
fi


dnl Check for programs
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_LN_S
AC_PATH_PROG(RM, rm, /bin/false)
AC_PATH_PROG(MV, mv, /bin/false)
AC_PATH_PROG(MKDIR, mkdir, /bin/false)
AC_PATH_PROG(LN, ln, cp)
AC_PATH_PROG(CMD_PERL, perl, /usr/local/bin/perl)

dnl Set PERL too
PERL="$CMD_PERL"
AC_SUBST(PERL)

dnl Check for headers
AC_HEADER_DIRENT
AC_HEADER_STDC


AC_CHECK_HEADERS( \
	alloca.h \
	arpa/inet.h \
	bstring.h \
	config.h \
	crypt.h \
	fcntl.h \
	memory.h \
	netinet/in.h \
	stdlib.h \
	string.h \
	strings.h \
	sys/file.h \
	sys/select.h\
	sys/time.h \
	sys/types.h \
	unistd.h \
	regex.h \
	syslog.h \
)

AC_MSG_CHECKING(for tm->tm_gmtoff)
AC_TRY_COMPILE([#include <time.h>
#include <sys/time.h>],
[struct tm foo;
foo.tm_gmtoff = 0;],
[AC_DEFINE(HAVE_TM_GMTOFF)
AC_MSG_RESULT(yes)],
AC_MSG_RESULT(no))

AC_MSG_CHECKING(for extended mallinfo)
AC_TRY_COMPILE([#include <sys/types.h>
#include <malloc.h>],
[struct mallinfo foo;
foo.mxfast = 0;],
[AC_DEFINE(HAVE_EXT_MALLINFO)
AC_MSG_RESULT(yes)],
AC_MSG_RESULT(no))

dnl Check for typedefs
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)

dnl Check for special functions
AC_FUNC_ALLOCA

dnl Check for needed libraries
AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(malloc, main, [HAVE_LIBMALLOC="yes"; LIBS="$LIBS -lmalloc"])
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(resolv, main)
AC_CHECK_LIB(bsd, main)

dnl We found a version of libresolv on SunOS 4.x which requires -l44bsd
dnl We have to first check to see if -l44bsd is present and has the
dnl function inet_aton 
AC_CHECK_LIB(44bsd, inet_aton, [HAVE_LIB44BSD="yes"])
AC_CHECK_LIB(resolv, inet_aton, [if test "$HAVE_LIB44BSD" = "yes"; then LIBS="$LIBS -l44bsd"; fi])

dnl Check for libcrypt
dnl We use crypt(3) which may be in libc, or in libcrypt (eg FreeBSD)
AC_CHECK_LIB(crypt, crypt, [CRYPT_LIB="-lcrypt"])
AC_SUBST(CRYPT_LIB)

dnl System-specific library modifications
dnl
case "$host" in
	*-sun-solaris*)
        	echo "Removing -lmalloc for Solaris..."
        	LIBS=`echo $LIBS | sed -e s/-lmalloc//`
        	HAVE_LIBMALLOC="no"
		;;
	*-sgi-irix*)
        	echo "Removing -lsocket for IRIX..."
        	LIBS=`echo $LIBS | sed -e s/-lsocket//`
        	echo "Removing -lnsl for IRIX..."
        	LIBS=`echo $LIBS | sed -e s/-lnsl//`
		;;
esac

dnl Check for library functions
AC_CHECK_FUNCS(\
	getdtablesize \
	mallinfo \
	mallopt \
	regcomp \
	regexec \
	regfree \
	setrlimit \
	strdup \
	strerror \
	sysconf \
	syslog \
	timegm\
)

dnl Need the debugging version of malloc if available
XTRA_OBJS=''
if test "$HAVE_LIBMALLOC" = "yes" ; then
	if test -r /usr/lib/debug/malloc.o ; then
		XTRA_OBJS="$XTRA_OBJS /usr/lib/debug/malloc.o"
	fi
	if test -r /usr/lib/debug/mallocmap.o ; then
		XTRA_OBJS="$XTRA_OBJS /usr/lib/debug/mallocmap.o"
	fi
fi
AC_SUBST(XTRA_OBJS)

XTRA_LIBS="$LIBS"
LIBS=''
AC_SUBST(XTRA_LIBS)

dnl Set STD_CFLAGS
if test -z "$STD_CFLAGS"; then
    STD_CFLAGS="-g"
    XXXCC=`echo $CC | awk '{print $1}'`
    if test "`basename $XXXCC`" = "gcc"; then
	case "$host" in
	*-sun-sunos*)
		# sunos has too many warnings for this to be useful
		;;
	*)
		STD_CFLAGS="$STD_CFLAGS -Wall"
		;;
	esac
    fi
fi
AC_SUBST(STD_CFLAGS)

dnl Set STD_LDFLAGS
if test -z "$STD_LDFLAGS"; then
    STD_LDFLAGS="-g"
fi
AC_SUBST(STD_LDFLAGS)

dnl Last minute system specific modifications
dnl
case "$host" in
	*-sgi-irix*)
		echo "Adding ANSI compile flags for IRIX..."
		XXXCC=`echo $CC | awk '{print $1}'`
		if test "`basename $XXXCC`" = "gcc"; then
			[XTRA_CFLAGS="$XTRA_CFLAGS -ansi"]
		else
			[XTRA_CFLAGS="$XTRA_CFLAGS -D__STRICT_ANSI__"]
		fi
		;;
	*-hp-hpux*)
		echo "Disabling 'ranlib' for HP-UX..."
		RANLIB=":"
		;;
esac


dnl Clean up after OSF/1 core dump bug
rm -f core 

AC_OUTPUT(\
	./makefile \
	./lib/Makefile \
	./include/config.h \
	./scripts/Makefile \
	./scripts/RunCache \
	./scripts/RunAccel \
	./src/Makefile \
	./src/squid.conf \
)
